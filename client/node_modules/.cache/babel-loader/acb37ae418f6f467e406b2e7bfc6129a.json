{"ast":null,"code":"const Reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        user: null,\n        isFetching: true,\n        error: false\n      };\n\n    case \"LOGIN_SUCCESS\":\n      return {\n        user: action.payload,\n        isFetching: false,\n        error: false\n      };\n\n    case \"LOGIN_FAILURE\":\n      return {\n        user: null,\n        isFetching: false,\n        error: true\n      };\n\n    case \"LOGOUT\":\n      return {\n        user: null,\n        isFetching: false,\n        error: false\n      };\n\n    case \"UPDATE_START\":\n      return {\n        user: state.user,\n        isFetching: true,\n        error: false\n      };\n\n    case \"UPDATE_SUCCESS\":\n      return {\n        user: action.payload,\n        isFetching: false,\n        error: false\n      };\n\n    case \"UPDATE_FAILURE\":\n      return {\n        user: state.user,\n        isFetching: false,\n        error: true\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = Reducer;\nexport default Reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"names":["Reducer","state","action","type","user","isFetching","error","payload"],"sources":["F:/web dev files/MERN Blog Website/back-end-blog-website/client/src/context/Reducer.js"],"sourcesContent":["const Reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN_START\": \r\n            return ({\r\n                user: null,\r\n                isFetching: true,\r\n                error: false\r\n            });  \r\n        case \"LOGIN_SUCCESS\": \r\n            return ({\r\n                user: action.payload,\r\n                isFetching: false,\r\n                error: false\r\n            });\r\n        case \"LOGIN_FAILURE\": \r\n            return ({\r\n                user: null,\r\n                isFetching: false,\r\n                error: true\r\n            });\r\n        case \"LOGOUT\": \r\n            return ({\r\n                user: null,\r\n                isFetching: false,\r\n                error: false\r\n            });\r\n        case \"UPDATE_START\": \r\n            return ({\r\n                user: state.user,\r\n                isFetching: true,\r\n                error: false\r\n            });  \r\n        case \"UPDATE_SUCCESS\": \r\n            return ({\r\n                user: action.payload,\r\n                isFetching: false,\r\n                error: false\r\n            });\r\n        case \"UPDATE_FAILURE\": \r\n            return ({\r\n                user: state.user,\r\n                isFetching: false,\r\n                error: true\r\n            });\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default Reducer;"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EAC/B,QAAQA,MAAM,CAACC,IAAf;IACI,KAAK,aAAL;MACI,OAAQ;QACJC,IAAI,EAAE,IADF;QAEJC,UAAU,EAAE,IAFR;QAGJC,KAAK,EAAE;MAHH,CAAR;;IAKJ,KAAK,eAAL;MACI,OAAQ;QACJF,IAAI,EAAEF,MAAM,CAACK,OADT;QAEJF,UAAU,EAAE,KAFR;QAGJC,KAAK,EAAE;MAHH,CAAR;;IAKJ,KAAK,eAAL;MACI,OAAQ;QACJF,IAAI,EAAE,IADF;QAEJC,UAAU,EAAE,KAFR;QAGJC,KAAK,EAAE;MAHH,CAAR;;IAKJ,KAAK,QAAL;MACI,OAAQ;QACJF,IAAI,EAAE,IADF;QAEJC,UAAU,EAAE,KAFR;QAGJC,KAAK,EAAE;MAHH,CAAR;;IAKJ,KAAK,cAAL;MACI,OAAQ;QACJF,IAAI,EAAEH,KAAK,CAACG,IADR;QAEJC,UAAU,EAAE,IAFR;QAGJC,KAAK,EAAE;MAHH,CAAR;;IAKJ,KAAK,gBAAL;MACI,OAAQ;QACJF,IAAI,EAAEF,MAAM,CAACK,OADT;QAEJF,UAAU,EAAE,KAFR;QAGJC,KAAK,EAAE;MAHH,CAAR;;IAKJ,KAAK,gBAAL;MACI,OAAQ;QACJF,IAAI,EAAEH,KAAK,CAACG,IADR;QAEJC,UAAU,EAAE,KAFR;QAGJC,KAAK,EAAE;MAHH,CAAR;;IAKJ;MACI,OAAOL,KAAP;EA5CR;AA8CH,CA/CD;;KAAMD,O;AAiDN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}